"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")
scalar Upload
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")
"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    users: [User!]!
    user(id: ID @eq): User @find
    roles: [Role!]!
    provinces: [Province!]!
        @all(model: "HoangPhi\\VietnamMap\\Models\\Province")
    provinceDetail(id: ID! @eq): Province
        @find(model: "HoangPhi\\VietnamMap\\Models\\Province")
    workCategories: [WorkCategory!]! @all
    me: User @auth(guard: "api")
    topCompany(amount: Int!): [Company!]!
    newWorkJob(amount: Int!): [WorkJob!]!
    companyDetail(slug: String! @eq): Company @find
    workJobHiringOfCompany(companyId: ID!): [WorkJob!]!
    getWorkJobBySlug(slug: String! @eq): WorkJob @find
    userAppliedWorkJob(user_id: ID! @eq, work_job_id: ID! @eq): UserAppliedJob
        @find(model: "App\\Models\\WorkApply")
    workJobOfProvince(provinceId: ID!): WorkJobPaginator
    getAllWorkJob(
        page: Int!
        input: WorkJobSearchInput @spread
    ): WorkJobPaginator
}

type WorkJobPaginator {
    paginatorInfo: PaginatorInfo!
    data: [WorkJob!]!
}

type Mutation {
    login(email: String!, password: String!): AuthPayload
    registerUser(email: String!, password: String!): AuthPayload
    applyCV(content: String!, fileCV: Upload!, jobId: ID!): UploadedCV
}

type UploadedCV {
    id: ID!
    path: String
}

interface Modal {
    id: ID!
}

type Province implements Modal {
    id: ID!
    name: String
}
interface Paginator {
    total: Int
}

#import user.graphql
#import work.graphql
#import company.graphql

type AuthPayload {
    token: String
    user: User
    message: String
}

type Role {
    id: ID!
    name: String!
    users: [User]! @hasMany
}

enum GenderEnum {
    male @enum(value: 0)
    female @enum(value: 1)
}

type User implements Modal {
    id: ID!
    lastname: String
    firstname: String
    address: String
    email: String!
    phone: String
    birthday: DateTime
    created_at: DateTime
    gender: GenderEnum
    avatar: String
    updated_at: DateTime!
    role: Role! @belongsTo
    company: Company @hasOne
}

type UserPaginator {
    paginatorInfo: PaginatorInfo!
    data: [User!]!
}

type UserAppliedJob {
    id: ID!
    user_id: ID
    work_job_id: ID
    cv_url: String!
    status: String
    letter: String
}

input UserUpdateInput {
    id: ID!
    password: String
    role_id: ID!
}

input UserProfileInput {
    lastname: String
    firstname: String
    address: String
    phone: String
    birthday: String
    gender: GenderEnum
    avatar: Upload
}

input UserAddInput {
    email: String!
    password: String!
    role_id: ID!
    firstname: String!
    lastname: String!
}
